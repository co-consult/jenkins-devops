pipeline {
    agent any
    triggers {
        pollSCM('0 8 * * *')
    }
    environment {
        IMAGE_NAME = 'cogeex:frontend-latest'
        DEPLOYMENT_FILE = 'cogeex-frontend-deployment.yaml'
    }
    stages {
        stage('Checkout Repo') {
            steps {
                script {
                    // Checkout the first repo into the default workspace
                    checkout([$class: 'GitSCM',
                        branches: [[name: '*/develop']],
                        extensions: [], // No extensions needed for default workspace
                        userRemoteConfigs: [[
                            credentialsId: 'azure_secret',
                            url: 'https://dev.azure.com/CoConsult/CoGeex%20v2/_git/Cogeex-FrontEnd'
                        ]]
                    ])
                }
            }
        }
        stage('Build Docker Image') {
            steps {
                script {
                    docker.build("${IMAGE_NAME}", "-f Dockerfile .")
                }
            }
        }
        stage('Deploy to Minikube') {
            steps {
                script {
                    // Checkout the second repo into a subdirectory to avoid overwriting
                    dir('jenkins-devops') {
                        checkout([$class: 'GitSCM',
                            branches: [[name: '*/DEVOPS-13']],
                            extensions: [],
                            userRemoteConfigs: [[
                                credentialsId: 'git_secret',
                                url: 'https://github.com/co-consult/jenkins-devops'
                            ]]
                        ])
                        // Run kubectl commands from the subdirectory
                        sh '''
                        if kubectl get -f cogeex-frontend-deployment.yaml > /dev/null 2>&1; then
                            echo "Deleting existing Kubernetes resources..."
                            kubectl delete -f cogeex-frontend-deployment.yaml
                        else
                            echo "No existing resources to delete."
                        fi
                        '''
                    }
                    checkout([$class: 'GitSCM',
                        branches: [[name: '*/develop']],
                        extensions: [],
                        userRemoteConfigs: [[
                            credentialsId: 'azure_secret',
                            url: 'https://dev.azure.com/CoConsult/CoGeex%20v2/_git/Cogeex-FrontEnd'
                        ]]
                    ])
                }
            }
        }
    }
}